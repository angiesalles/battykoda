# Generated by Django 5.1.7 on 2025-03-26 21:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("battycoda_app", "0026_alter_classifier_group_alter_groupmembership_group_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SegmentationAlgorithm",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Name of the segmentation algorithm", max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Description of how the algorithm works", null=True),
                ),
                (
                    "algorithm_type",
                    models.CharField(
                        choices=[
                            ("threshold", "Threshold-based Detection"),
                            ("energy", "Energy-based Detection"),
                            ("ml", "Machine Learning Detection"),
                            ("external", "External Service"),
                        ],
                        default="threshold",
                        help_text="Type of segmentation algorithm",
                        max_length=20,
                    ),
                ),
                (
                    "celery_task",
                    models.CharField(
                        default="battycoda_app.audio.tasks.auto_segment_recording",
                        help_text="Fully qualified Celery task name to execute this algorithm",
                        max_length=255,
                    ),
                ),
                (
                    "service_url",
                    models.CharField(
                        blank=True, help_text="URL of the external service, if applicable", max_length=255, null=True
                    ),
                ),
                (
                    "endpoint",
                    models.CharField(blank=True, help_text="Endpoint path for the service", max_length=255, null=True),
                ),
                (
                    "default_min_duration_ms",
                    models.IntegerField(default=10, help_text="Default minimum duration in milliseconds"),
                ),
                ("default_smooth_window", models.IntegerField(default=3, help_text="Default smoothing window size")),
                (
                    "default_threshold_factor",
                    models.FloatField(default=0.5, help_text="Default threshold factor (0-10)"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Whether this algorithm is currently active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Group that owns this algorithm. If null, it's available to all groups",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="segmentation_algorithms",
                        to="battycoda_app.group",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="segmentationjob",
            name="algorithm",
            field=models.ForeignKey(
                blank=True,
                help_text="The algorithm used for this segmentation job",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobs",
                to="battycoda_app.segmentationalgorithm",
            ),
        ),
    ]
